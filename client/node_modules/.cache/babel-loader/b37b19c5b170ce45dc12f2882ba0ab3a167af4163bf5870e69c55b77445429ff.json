{"ast":null,"code":"var _jsxFileName = \"E:\\\\Internship\\\\Employee_Dashboard\\\\client\\\\src\\\\components\\\\ExcelUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport * as XLSX from 'xlsx'; // Import XLSX library\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [showSuccessMessage, setShowSuccessMessage] = useState(false);\n  const [excelData, setExcelData] = useState(null);\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const handleUpload = () => {\n    if (!file) {\n      console.error('Please select a file');\n      return;\n    }\n    const reader = new FileReader();\n    reader.onload = event => {\n      const data = new Uint8Array(event.target.result);\n      const workbook = XLSX.read(data, {\n        type: 'array'\n      });\n      const sheetName = workbook.SheetNames[0]; // Assuming only one sheet\n      const sheet = workbook.Sheets[sheetName];\n      const parsedData = XLSX.utils.sheet_to_json(sheet, {\n        header: 1\n      });\n      setExcelData(parsedData);\n      setShowSuccessMessage(true);\n    };\n    reader.readAsArrayBuffer(file);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"card-title\",\n          children: \"Excel Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          type: \"file\",\n          accept: \".xlsx, .xls\",\n          onChange: handleFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary mt-3\",\n          onClick: handleUpload,\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), showSuccessMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-success mt-3\",\n          role: \"alert\",\n          children: \"File uploaded successfully!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), excelData && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          style: {\n            maxHeight: 'calc(100vh - 200px)',\n            overflow: 'auto'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Preview of Uploaded Excel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table table-bordered\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: excelData[0].map((header, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: header\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: excelData.slice(1).map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: row.map((cell, cellIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: cell\n                }, cellIndex, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 25\n                }, this))\n              }, rowIndex, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"pGcVJI/czTAGmkaVtnA0NxvSpqs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","XLSX","jsxDEV","_jsxDEV","App","_s","file","setFile","showSuccessMessage","setShowSuccessMessage","excelData","setExcelData","handleFileChange","e","target","files","handleUpload","console","error","reader","FileReader","onload","event","data","Uint8Array","result","workbook","read","type","sheetName","SheetNames","sheet","Sheets","parsedData","utils","sheet_to_json","header","readAsArrayBuffer","className","children","fileName","_jsxFileName","lineNumber","columnNumber","accept","onChange","onClick","role","style","maxHeight","overflow","map","index","slice","row","rowIndex","cell","cellIndex","_c","$RefreshReg$"],"sources":["E:/Internship/Employee_Dashboard/client/src/components/ExcelUpload.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport * as XLSX from 'xlsx'; // Import XLSX library\r\n\r\nfunction App() {\r\n  const [file, setFile] = useState(null);\r\n  const [showSuccessMessage, setShowSuccessMessage] = useState(false);\r\n  const [excelData, setExcelData] = useState(null);\r\n\r\n  const handleFileChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleUpload = () => {\r\n    if (!file) {\r\n      console.error('Please select a file');\r\n      return;\r\n    }\r\n\r\n    const reader = new FileReader();\r\n    reader.onload = (event) => {\r\n      const data = new Uint8Array(event.target.result);\r\n      const workbook = XLSX.read(data, { type: 'array' });\r\n      const sheetName = workbook.SheetNames[0]; // Assuming only one sheet\r\n      const sheet = workbook.Sheets[sheetName];\r\n      const parsedData = XLSX.utils.sheet_to_json(sheet, { header: 1 });\r\n      setExcelData(parsedData);\r\n      setShowSuccessMessage(true);\r\n    };\r\n    reader.readAsArrayBuffer(file);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"card\">\r\n        <div className=\"card-body\">\r\n          <h2 className=\"card-title\">Excel Upload</h2>\r\n          <input className=\"form-control\" type=\"file\" accept=\".xlsx, .xls\" onChange={handleFileChange} />\r\n          <button className=\"btn btn-primary mt-3\" onClick={handleUpload}>Upload</button>\r\n          {showSuccessMessage && (\r\n            <div className=\"alert alert-success mt-3\" role=\"alert\">\r\n              File uploaded successfully!\r\n            </div>\r\n          )}\r\n          {excelData && (\r\n            <div className=\"mt-3\" style={{ maxHeight: 'calc(100vh - 200px)', overflow: 'auto' }}>\r\n              <h3>Preview of Uploaded Excel</h3>\r\n              <table className=\"table table-bordered\">\r\n                <thead>\r\n                  <tr>\r\n                    {excelData[0].map((header, index) => (\r\n                      <th key={index}>{header}</th>\r\n                    ))}\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {excelData.slice(1).map((row, rowIndex) => (\r\n                    <tr key={rowIndex}>\r\n                      {row.map((cell, cellIndex) => (\r\n                        <td key={cellIndex}>{cell}</td>\r\n                      ))}\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}