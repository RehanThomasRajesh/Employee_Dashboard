{"ast":null,"code":"var _jsxFileName = \"E:\\\\Internship\\\\Employee_Dashboard\\\\client\\\\src\\\\components\\\\DynamicForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DynamicForm = () => {\n  _s();\n  const [columns, setColumns] = useState([]);\n  const [selectedFilters, setSelectedFilters] = useState({});\n  useEffect(() => {\n    // Fetch list of columns from the backend\n    axios.get('/api/dynamic-form').then(response => {\n      setColumns(response.data.columns);\n    }).catch(error => {\n      console.error('Error fetching columns:', error);\n    });\n  }, []);\n  const handleFilterChange = (columnName, value) => {\n    // Update selected filters when the user selects a filter\n    setSelectedFilters(prevFilters => ({\n      ...prevFilters,\n      [columnName]: value\n    }));\n  };\n  const handleSubmit = e => {\n    e.preventDefault(); // Prevent default form submission behavior\n    // Handle form submission and send selected filters to the backend\n    axios.post('/api/dynamic-form', selectedFilters).then(response => {\n      console.log('Filters saved successfully:', response.data.message);\n    }).catch(error => {\n      console.error('Error saving filters:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mb-4\",\n      children: \"Dynamic Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [columns.map(column => {\n        // Map only the specified fields\n        if (['Status', 'Type', 'Notice Period', 'Work Location', 'Primary Skill', 'Gender', 'Marital Status', 'Blood Group', 'Work Timing', 'Flexibility', 'Weekday'].includes(column.filterName)) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group row\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: column.filterName,\n              className: \"col-sm-3 col-form-label\",\n              children: column.filterName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-sm-9\",\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                id: column.filterName,\n                name: column.filterName,\n                className: \"form-control\",\n                onChange: e => handleFilterChange(column.filterName, e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 41\n                }, this), Array.isArray(column.filterConditions) && column.filterConditions.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: option,\n                  children: option\n                }, option, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 45\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 33\n            }, this)]\n          }, column.filterName, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }, this);\n        }\n        return null;\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(DynamicForm, \"W8XkzsgPPUn7cWWpFgHdNcR6Y18=\");\n_c = DynamicForm;\nexport default DynamicForm;\nvar _c;\n$RefreshReg$(_c, \"DynamicForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","DynamicForm","_s","columns","setColumns","selectedFilters","setSelectedFilters","get","then","response","data","catch","error","console","handleFilterChange","columnName","value","prevFilters","handleSubmit","e","preventDefault","post","log","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","map","column","includes","filterName","htmlFor","id","name","onChange","target","Array","isArray","filterConditions","option","type","_c","$RefreshReg$"],"sources":["E:/Internship/Employee_Dashboard/client/src/components/DynamicForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst DynamicForm = () => {\r\n    const [columns, setColumns] = useState([]);\r\n    const [selectedFilters, setSelectedFilters] = useState({});\r\n\r\n    useEffect(() => {\r\n        // Fetch list of columns from the backend\r\n        axios.get('/api/dynamic-form')\r\n            .then(response => {\r\n                setColumns(response.data.columns);\r\n            })\r\n            .catch(error => {\r\n                console.error('Error fetching columns:', error);\r\n            });\r\n    }, []);\r\n\r\n    const handleFilterChange = (columnName, value) => {\r\n        // Update selected filters when the user selects a filter\r\n        setSelectedFilters(prevFilters => ({\r\n            ...prevFilters,\r\n            [columnName]: value\r\n        }));\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault(); // Prevent default form submission behavior\r\n        // Handle form submission and send selected filters to the backend\r\n        axios.post('/api/dynamic-form', selectedFilters)\r\n            .then(response => {\r\n                console.log('Filters saved successfully:', response.data.message);\r\n            })\r\n            .catch(error => {\r\n                console.error('Error saving filters:', error);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <h2 className=\"mb-4\">Dynamic Form</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                {/* Render dropdowns for selected fields */}\r\n                {columns.map(column => {\r\n                    // Map only the specified fields\r\n                    if (['Status', 'Type', 'Notice Period', 'Work Location', 'Primary Skill', 'Gender', 'Marital Status', 'Blood Group', 'Work Timing', 'Flexibility', 'Weekday'].includes(column.filterName)) {\r\n                        return (\r\n                            <div key={column.filterName} className=\"form-group row\">\r\n                                <label htmlFor={column.filterName} className=\"col-sm-3 col-form-label\">{column.filterName}</label>\r\n                                <div className=\"col-sm-9\">\r\n                                    <select id={column.filterName} name={column.filterName} className=\"form-control\" onChange={(e) => handleFilterChange(column.filterName, e.target.value)}>\r\n                                        <option value=\"\">Select...</option>\r\n                                        {/* Check if filterConditions is an array before mapping over it */}\r\n                                        {Array.isArray(column.filterConditions) && column.filterConditions.map(option => (\r\n                                            <option key={option} value={option}>{option}</option>\r\n                                        ))}\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    }\r\n                    return null;\r\n                })}\r\n                <button type=\"submit\" className=\"btn btn-primary\">Save</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DynamicForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}