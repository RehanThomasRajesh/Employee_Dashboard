{"ast":null,"code":"var _jsxFileName = \"E:\\\\Internship\\\\client\\\\src\\\\components\\\\ExcelUpload.js\",\n  _s = $RefreshSig$();\n// ExcelUpload.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExcelUpload = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [fileName, setFileName] = useState('');\n  const handleFileChange = e => {\n    const selectedFile = e.target.files[0];\n    setFile(selectedFile);\n    setFileName(selectedFile ? selectedFile.name : '');\n  };\n  const handleUpload = async () => {\n    try {\n      if (!file) {\n        console.error('No file selected for upload.');\n        return;\n      }\n      const formData = new FormData();\n      formData.append('excelFile', file);\n      await axios.post('http://localhost:3000/api/upload-excel', formData);\n      console.log('File uploaded successfully!');\n    } catch (error) {\n      console.error('Error uploading file:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"excel-upload\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Excel Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".xlsx, .xls\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), fileName && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Selected File: \", fileName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      disabled: !file,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(ExcelUpload, \"oVNFPFk0fBJJOmSW4fnLhxWgu8A=\");\n_c = ExcelUpload;\nexport default ExcelUpload;\nvar _c;\n$RefreshReg$(_c, \"ExcelUpload\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ExcelUpload","_s","file","setFile","fileName","setFileName","handleFileChange","e","selectedFile","target","files","name","handleUpload","console","error","formData","FormData","append","post","log","className","children","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","onClick","disabled","_c","$RefreshReg$"],"sources":["E:/Internship/client/src/components/ExcelUpload.js"],"sourcesContent":["// ExcelUpload.js\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst ExcelUpload = () => {\r\n  const [file, setFile] = useState(null);\r\n  const [fileName, setFileName] = useState('');\r\n\r\n  const handleFileChange = (e) => {\r\n    const selectedFile = e.target.files[0];\r\n\r\n    setFile(selectedFile);\r\n    setFileName(selectedFile ? selectedFile.name : '');\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    try {\r\n      if (!file) {\r\n        console.error('No file selected for upload.');\r\n        return;\r\n      }\r\n\r\n      const formData = new FormData();\r\n      formData.append('excelFile', file);\r\n\r\n      await axios.post('http://localhost:3000/api/upload-excel', formData);\r\n\r\n      console.log('File uploaded successfully!');\r\n    } catch (error) {\r\n      console.error('Error uploading file:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"excel-upload\">\r\n      <h2>Excel Upload</h2>\r\n      <input type=\"file\" accept=\".xlsx, .xls\" onChange={handleFileChange} />\r\n      {fileName && <p>Selected File: {fileName}</p>}\r\n      <button onClick={handleUpload} disabled={!file}>\r\n        Upload\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExcelUpload;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMU,gBAAgB,GAAIC,CAAC,IAAK;IAC9B,MAAMC,YAAY,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAEtCP,OAAO,CAACK,YAAY,CAAC;IACrBH,WAAW,CAACG,YAAY,GAAGA,YAAY,CAACG,IAAI,GAAG,EAAE,CAAC;EACpD,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,IAAI,CAACV,IAAI,EAAE;QACTW,OAAO,CAACC,KAAK,CAAC,8BAA8B,CAAC;QAC7C;MACF;MAEA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,WAAW,EAAEf,IAAI,CAAC;MAElC,MAAML,KAAK,CAACqB,IAAI,CAAC,wCAAwC,EAAEH,QAAQ,CAAC;MAEpEF,OAAO,CAACM,GAAG,CAAC,6BAA6B,CAAC;IAC5C,CAAC,CAAC,OAAOL,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAED,oBACEf,OAAA;IAAKqB,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC3BtB,OAAA;MAAAsB,QAAA,EAAI;IAAY;MAAAjB,QAAA,EAAAkB,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBzB,OAAA;MAAO0B,IAAI,EAAC,MAAM;MAACC,MAAM,EAAC,aAAa;MAACC,QAAQ,EAAErB;IAAiB;MAAAF,QAAA,EAAAkB,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACrEpB,QAAQ,iBAAIL,OAAA;MAAAsB,QAAA,GAAG,iBAAe,EAACjB,QAAQ;IAAA;MAAAA,QAAA,EAAAkB,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7CzB,OAAA;MAAQ6B,OAAO,EAAEhB,YAAa;MAACiB,QAAQ,EAAE,CAAC3B,IAAK;MAAAmB,QAAA,EAAC;IAEhD;MAAAjB,QAAA,EAAAkB,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAApB,QAAA,EAAAkB,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACvB,EAAA,CAvCID,WAAW;AAAA8B,EAAA,GAAX9B,WAAW;AAyCjB,eAAeA,WAAW;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}